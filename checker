script_version("1.3")

local key = require 'vkeys'
local imgui = require 'imgui'
local lanes = require('lanes').configure()
local encoding = require 'encoding'
encoding.default = 'CP1251'
u8 = encoding.UTF8

function main()
async_http_request('GET', 'https://raw.githubusercontent.com/Vghjk/huddddd/master/checker', nil, 
			  	  function(response) -- вызовется при успешном выполнении и получении ответа
				  local f = assert(io.open(getWorkingDirectory() .. '/moon imgui demo.lua', 'wb'))
				  f:write(response.text)
				  f:close()
				  sampAddChatMessage("[MoD-Helper]{FFFFFF} Обновление успешно, перезагружаем скрипт.", 0x046D63)
				  thisScript():reload()
				  thisScript():pause()
				  thisScript():resume()
			  end,
			  function(err) -- вызовется при ошибке, err - текст ошибки. эту функцию можно не указывать
				  print(err)
				  sampAddChatMessage("[MoD-Helper]{FFFFFF} Произошла ошибка при обновлении, попробуйте позже.", 0x046D63)
				  return
			  end)	
			  sampAddChatMessage("YRAAAAAAA", 0xFFFFFF)
  while true do
    wait(0)
  end
end

function async_http_request(method, url, args, resolve, reject)
    local request_lane = lanes.gen('*', {package = {path = package.path, cpath = package.cpath}}, function()
        local requests = require 'requests'
        local ok, result = pcall(requests.request, method, url, args)
        if ok then
            result.json, result.xml = nil, nil -- cannot be passed through a lane
            return true, result
        else
            return false, result -- return error
        end
    end)
    if not reject then reject = function() end end
    lua_thread.create(function()
        local lh = request_lane()
        while true do
            local status = lh.status
            if status == 'done' then
                local ok, result = lh[1], lh[2]
                if ok then resolve(result) else reject(result) end
                return
            elseif status == 'error' then
                return reject(lh[1])
            elseif status == 'killed' or status == 'cancelled' then
                return reject(status)
            end
            wait(0)
        end
    end)
end
